version: '3.9'

name: face_detector

services:
  rabbitmq:
    container_name: rabbitmq
    restart: unless-stopped
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    container_name: redis
    restart: unless-stopped
    image: redis
    ports:
      - "6379:6379"


  api:
    container_name: backend
    restart: unless-stopped
    build:
      dockerfile: deploy/backend/Dockerfile
      context: ..
    environment:
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - STATIC_FOLDER=${STATIC_FOLDER}
      - BROKER_URI=${BROKER_URI}
      - BACKEND_URI=${BACKEND_URI}
    volumes:
      - ../repo/:/app/repo/
      - ../backend:/app/backend
    command: sh -c "poetry run uvicorn backend.__main__:app --host 0.0.0.0 --port 5000"
    ports:
      - "8000:5000"

  worker:
    container_name: celery_worker
    build:
      dockerfile: deploy/backend/Dockerfile
      context: ..
    environment:
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - STATIC_FOLDER=${STATIC_FOLDER}
      - BROKER_URI=${BROKER_URI}
      - BACKEND_URI=${BACKEND_URI}
    volumes:
      - ../repo/:/app/repo/
      - ../backend:/app/backend

    command: sh -c "poetry run celery -A backend.tasks.app_worker worker -l INFO --pool=solo"
    depends_on:
      - redis
      - rabbitmq
      - api

  frontend:
    build:
      dockerfile: deploy/frontend/Dockerfile
      context: ..

    command: sh -c "npm run serve"
    volumes:
      - ../frontend:/app
      - ../frontend:/app/node_modules
    ports:
      - "8080:8080"

volumes:
  repo:
    external: true

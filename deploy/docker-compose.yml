version: '3.9'

name: face_detector

services:
  rabbitmq:
    container_name: rabbitmq
    restart: unless-stopped
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    container_name: redis
    restart: unless-stopped
    image: redis
    ports:
      - "6379:6379"


  api:
    container_name: api
    restart: unless-stopped
    build:
      dockerfile: deploy/detector/Dockerfile
      context: ..
    environment:
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - STATIC_FOLDER=${STATIC_FOLDER}
      - BROKER_URI=${BROKER_URI}
      - BACKEND_URI=${BACKEND_URI}
    volumes:
      - ../repo/uploads:/app/repo/uploads
      - ../repo/results:/app/repo/results
    command: sh -c "poetry run uvicorn detector.__main__:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"

  worker:
    container_name: celery_worker
    build:
      dockerfile: deploy/detector/Dockerfile
      context: ..
    environment:
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - RESULT_FOLDER=${RESULT_FOLDER}
      - STATIC_FOLDER=${STATIC_FOLDER}
      - BROKER_URI=${BROKER_URI}
      - BACKEND_URI=${BACKEND_URI}
    volumes:
      - ../repo/uploads:/app/repo/uploads
      - ../repo/results:/app/repo/results
      - ../repo/models:/app/repo/models

    command: sh -c "poetry run celery -A detector.tasks.app_worker worker -l INFO --pool=solo"
    depends_on:
      - redis
      - rabbitmq
      - api

  webapp:
    container_name: webapp
    build:
      dockerfile: deploy/webapp/Dockerfile
      context: ..
    command: sh -c "cd /app && uvicorn app:app --host 0.0.0.0 --port 8080 --reload"
    ports:
      - "8080:8080"

volumes:
  repo:
    external: true
